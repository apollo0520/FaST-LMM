name: CI
on: push
    
jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]#, windows-latest, macOS-latest]
        python-version: [3.9]#3.7, 3.8, 3.9]
    runs-on: ${{ matrix.os }}

    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        lfs: true
    - name: Checkout LFS objects
      run: git lfs checkout

    - name: Install GCC 7 on Mac
      if: runner.os == 'macOS'
      run: brew install gcc@7


    - name: Set up Miniconda ${{ matrix.python-version }}
      uses: conda-incubator/setup-miniconda@v2
      with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}

    # cmk installing bed-reader from test pypi
    - name: Install Prerequisites and build
      shell: bash -l {0}
      run: |
        conda install pip
        conda install cython
        conda install --file conda_requirements.txt
        pip install -r requirements.txt
        pip uninstall bed-reader --yes
        pip uninstall pysnptools --yes
        pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple bed-reader
        pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple pysnptools
        export CC=gcc-7
        export CXX=g++-7
        python setup.py build_ext --inplace
        pip freeze
        python setup.py sdist bdist_wheel

    - name: Test
      shell: bash -l {0}
      run: |
        pip uninstall fastlmm --yes
        export PYTHONPATH=${GITHUB_WORKSPACE}
        cd tests
        python test.py

    - name: Save Windows and Mac Wheels
      if: matrix.os != 'ubuntu-latest'
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist/*.whl

    - name: Save SDist
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8'
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist/*.tar.gz
